openapi: 3.0.0
paths:
  /api/auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLoginDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLoginDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Bad Request
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      tags:
        - Auth
  /api/auth/perfil:
    get:
      operationId: AuthController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPayloadDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      tags:
        - Auth
  /api/usuarios:
    post:
      operationId: UsuarioController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsuarioDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Cadastra um novo usuário no sistema
      tags:
        - Usuario
    get:
      operationId: UsuarioController_all
      parameters:
        - name: role
          required: false
          in: query
          description: filtro da role do usuário
          schema:
            enum:
              - ADMINISTRADOR
              - VENDEDOR
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Lista todos os usuários
      tags:
        - Usuario
  /api/usuarios/{id}:
    get:
      operationId: UsuarioController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID do usuário
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Dados do usuário
      tags:
        - Usuario
    patch:
      operationId: UsuarioController_alterarStatus
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterarStatusDto'
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Atualiza o status
      tags:
        - Usuario
  /api/usuarios/{id}/senha:
    patch:
      operationId: UsuarioController_redefinirSenha
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedefinirSenhaDto'
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Redefini a senha do usuário
      tags:
        - Usuario
  /api/vendedores:
    get:
      description: Retorna uma lista de todos os usuários com a role "VENDEDOR".
      operationId: VendedorController_findAll
      parameters: []
      responses:
        '200':
          description: Lista de vendedores retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendedorResponseDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Lista todos os vendedores
      tags:
        - Vendedores
  /api/vendedores/{vendedorId}/indicacoes:
    post:
      operationId: VendedorController_criarIndicacao
      parameters:
        - name: vendedorId
          required: true
          in: path
          description: UUID do vendedor
          schema:
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIndicacaoDto'
      responses:
        '204':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Cria um novo vínculo (indicação) entre um vendedor e um estabelecimento.
      tags:
        - Vendedores
    get:
      operationId: VendedorController_listarIndicacoesPorVendedor
      parameters:
        - name: vendedorId
          required: true
          in: path
          description: UUID do vendedor
          schema:
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      responses:
        '200':
          description: Lista de indicações retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicacaoResponseDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Lista todos os estabelecimentos indicados por um vendedor.
      tags:
        - Vendedores
  /api/vendedores/{vendedorId}/indicacoes/{estabelecimentoId}:
    patch:
      operationId: VendedorController_atualizarTaxaIndicacao
      parameters:
        - name: vendedorId
          required: true
          in: path
          description: UUID do vendedor
          schema:
            type: string
        - name: estabelecimentoId
          required: true
          in: path
          description: UUID do estabelecimento
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIndicacaoDto'
      responses:
        '204':
          description: Taxa de comissão atualizada com sucesso.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Atualiza a taxa de comissão de uma indicação específica.
      tags:
        - Vendedores
    delete:
      operationId: VendedorController_removerIndicacao
      parameters:
        - name: vendedorId
          required: true
          in: path
          description: UUID do vendedor
          schema:
            type: string
        - name: estabelecimentoId
          required: true
          in: path
          description: UUID do estabelecimento
          schema:
            type: string
      responses:
        '204':
          description: Vínculo removido com sucesso.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Remove o vínculo (indicação) entre um vendedor e um estabelecimento.
      tags:
        - Vendedores
  /api/relatorios/comissao:
    get:
      operationId: RelatoriosController_comissao
      parameters:
        - name: start_date
          required: true
          in: query
          description: 'A data de início do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-01'
            type: string
        - name: finish_date
          required: true
          in: query
          description: 'A data final do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-31'
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Total de comissão no período informado
      tags:
        - Relatorios
  /api/relatorios/vendedores/ranking:
    get:
      operationId: RelatoriosController_rankingMdrVendedores
      parameters:
        - name: start_date
          required: true
          in: query
          description: 'A data de início do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-01'
            type: string
        - name: finish_date
          required: true
          in: query
          description: 'A data final do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-31'
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingVendedoresDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Comissão por vendedor no perido informado
      tags:
        - Relatorios
  /api/relatorios/vendedores:
    get:
      operationId: RelatoriosController_totalVendedores
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Total de vendedores ativos
      tags:
        - Relatorios
  /api/relatorios/estabelecimentos:
    get:
      operationId: RelatoriosController_totalEstabelecimentos
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Total de estabelecimentos atríbuidos a vendedores
      tags:
        - Relatorios
  /api/relatorios/vendedores/{id}:
    get:
      operationId: RelatoriosController_recebimentosVendedor
      parameters:
        - name: id
          required: true
          in: path
          description: ID do vendedor
          schema:
            type: string
        - name: start_date
          required: true
          in: query
          description: 'A data de início do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-01'
            type: string
        - name: finish_date
          required: true
          in: query
          description: 'A data final do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-31'
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendedorRecebimentosDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Recebimentos do vendedor no período informado
      tags:
        - Relatorios
  /api/relatorios/estabelecimentos/{id}:
    get:
      operationId: RelatoriosController_recebimentosEstabelecimento
      parameters:
        - name: id
          required: true
          in: path
          description: ID do estabelecimento
          schema:
            type: string
        - name: start_date
          required: true
          in: query
          description: 'A data de início do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-01'
            type: string
        - name: finish_date
          required: true
          in: query
          description: 'A data final do período (formato: YYYY-MM-DD)'
          schema:
            example: '2025-01-31'
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstabelecimentoRecebimentosDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Recebimentos do vendedor no estabelecimento e periodo informados
      tags:
        - Relatorios
  /api/estabelecimentos:
    get:
      operationId: EstabelecimentosController_findAll
      parameters: []
      responses:
        '200':
          description: Lista de estabelecimentos retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstabelecimentoDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpError'
      security:
        - bearer: []
      summary: Listar todos os estabelecimentos
      tags:
        - Estabelecimentos
info:
  title: Portal Unipag
  description: Documentação do portal unipag
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    HttpError:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
    RequestLoginDto:
      type: object
      properties:
        email:
          type: string
        senha:
          type: string
      required:
        - email
        - senha
    ResponseLoginDto:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - ADMINISTRADOR
            - VENDEDOR
        access_token:
          type: string
      required:
        - id
        - email
        - role
        - access_token
    UserPayloadDto:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - ADMINISTRADOR
            - VENDEDOR
      required:
        - id
        - email
        - role
    CreateUsuarioDto:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        telefone:
          type: string
        role:
          type: string
          enum:
            - ADMINISTRADOR
            - VENDEDOR
        senha:
          type: string
      required:
        - nome
        - email
        - telefone
        - role
        - senha
    Usuario:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        email:
          type: string
        telefone:
          type: string
        role:
          type: string
          enum:
            - ADMINISTRADOR
            - VENDEDOR
        criado_em:
          format: date-time
          type: string
        ativo:
          type: boolean
      required:
        - id
        - nome
        - email
        - telefone
        - role
        - criado_em
        - ativo
    AlterarStatusDto:
      type: object
      properties:
        ativo:
          type: boolean
      required:
        - ativo
    RedefinirSenhaDto:
      type: object
      properties:
        senha:
          type: string
      required:
        - senha
    VendedorResponseDto:
      type: object
      properties:
        id:
          type: string
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        nome:
          type: string
          example: João da Silva
        email:
          type: string
          example: joao.silva@example.com
        telefone:
          type: object
          example: '11987654321'
          nullable: true
        role:
          type: string
          enum:
            - ADMINISTRADOR
            - VENDEDOR
          example: VENDEDOR
        criado_em:
          format: date-time
          type: string
        ativo:
          type: boolean
          example: true
      required:
        - id
        - nome
        - email
        - telefone
        - role
        - criado_em
        - ativo
    CreateIndicacaoDto:
      type: object
      properties:
        estabelecimento_id:
          type: string
          description: UUID do estabelecimento que está sendo indicado.
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        taxa_comissao:
          type: number
          description: >-
            Taxa de comissão (percentual) para o vendedor sobre este
            estabelecimento.
          example: 3.75
      required:
        - estabelecimento_id
        - taxa_comissao
    EstabelecimentoResponseDto:
      type: object
      properties:
        id:
          type: string
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        ceo_pag_id:
          type: number
          example: 12345
        document_number:
          type: string
          example: 12.345.678/0001-99
        social_reason:
          type: string
          example: Empresa Exemplo LTDA
        name:
          type: string
          example: Nome Fantasia Exemplo
        status:
          type: number
          example: 1
        account_source:
          type: string
          example: ONE
        created_at:
          format: date-time
          type: string
          example: '2023-10-01T12:00:00Z'
        updated_at:
          type: object
          example: '2023-10-01T12:00:00Z'
      required:
        - id
        - ceo_pag_id
        - document_number
        - social_reason
        - name
        - status
        - account_source
        - created_at
    IndicacaoResponseDto:
      type: object
      properties:
        id:
          type: string
          example: f0e9d8c7-b6a5-4321-fedc-ba9876543210
        taxa_comissao:
          type: number
          description: Taxa de comissão percentual
          example: 5.5
        atribuido_em:
          format: date-time
          type: string
        usuario_id:
          type: string
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        estabelecimento_id:
          type: string
          example: b1c2d3e4-f5g6-7890-1234-567890abcdef
        estabelecimento:
          $ref: '#/components/schemas/EstabelecimentoResponseDto'
      required:
        - id
        - taxa_comissao
        - atribuido_em
        - usuario_id
        - estabelecimento_id
        - estabelecimento
    UpdateIndicacaoDto:
      type: object
      properties:
        taxa_comissao:
          type: number
          description: Nova taxa de comissão (percentual) para a indicação.
          example: 4
      required:
        - taxa_comissao
    TotalDto:
      type: object
      properties:
        total:
          type: number
      required:
        - total
    RankingVendedoresDto:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        mdr:
          type: number
      required:
        - id
        - nome
        - mdr
    TotaisDto:
      type: object
      properties:
        mdr:
          type: number
        tpv:
          type: number
        rav:
          type: number
        liquido:
          type: number
      required:
        - mdr
        - tpv
        - rav
        - liquido
    EstabelecimentoDto:
      type: object
      properties:
        id:
          type: string
        ceo_pag_id:
          type: number
        document_number:
          type: string
          description: Número do documento (CNPJ ou CPF) do estabelecimento.
          example: '12345678000195'
        social_reason:
          type: string
          description: Razão social do estabelecimento.
          example: Empresa Exemplo LTDA
        name:
          type: string
          description: Nome fantasia ou nome comercial do estabelecimento.
          example: Nome Fantasia Exemplo
        status:
          type: number
          description: 'Status do estabelecimento (ex: 1 para Ativo, 0 para Inativo).'
          example: 1
        account_source:
          type: string
          description: Origem da conta ou sistema de onde o registro foi importado.
          example: sistema_legado
        indicacao:
          type: string
      required:
        - id
        - ceo_pag_id
        - document_number
        - social_reason
        - name
        - status
        - account_source
    RecebimentosDto:
      type: object
      properties:
        mdr:
          type: number
        tpv:
          type: number
        rav:
          type: number
        liquido:
          type: number
        estabelecimento:
          $ref: '#/components/schemas/EstabelecimentoDto'
      required:
        - mdr
        - tpv
        - rav
        - liquido
        - estabelecimento
    VendedorRecebimentosDto:
      type: object
      properties:
        totais:
          $ref: '#/components/schemas/TotaisDto'
        recebimentos:
          type: array
          items:
            $ref: '#/components/schemas/RecebimentosDto'
      required:
        - totais
        - recebimentos
    PayableDto:
      type: object
      properties:
        merchants_id:
          type: number
          description: ID do estabelecimento.
          example: 123
        merchants_document_number:
          type: string
          description: Número do documento do estabelecimento.
          example: '12345678000195'
        merchants_name:
          type: string
          description: Nome do estabelecimento.
          example: Nome do Estabelecimento
        original_merchants_id:
          type: number
          description: ID original do estabelecimento.
          example: 123
        original_document_number:
          type: string
          description: Número do documento original do estabelecimento.
          example: '12345678000195'
        original_merchants_name:
          type: string
          description: Nome original do estabelecimento.
          example: Nome Original do Estabelecimento
        payables_id:
          type: number
          description: ID do recebível.
          example: 456
        transaction_id:
          type: number
          description: ID da transação.
          example: 789
        authorization_code:
          type: string
          description: Código de autorização da transação.
          example: A1B2C3D4
        authorization_currency_code:
          type: string
          description: Código da moeda de autorização.
          example: BRL
        card_brand:
          type: string
          description: Bandeira do cartão.
          example: Visa
        payment_method:
          type: string
          description: Método de pagamento.
          example: credit_card
        installments:
          type: number
          description: Número de parcelas da transação.
          example: 1
        transaction_nsu:
          type: string
          description: NSU da transação.
          example: '123456789'
        transaction_tef_nsu:
          type: string
          description: NSU do TEF da transação.
          example: '987654321'
        transaction_amount:
          type: string
          description: Valor da transação.
          example: '100.00'
        original_transaction_amount:
          type: string
          description: Valor original da transação.
          example: '100.00'
        split_rules:
          type: object
          description: Regras de divisão da transação.
          example: null
          nullable: true
        transaction_splited:
          type: string
          description: Indica se a transação foi dividida.
          example: 'false'
        transaction_date:
          type: string
          description: Data da transação.
          example: '2025-07-21T10:00:00Z'
          format: date-time
        payables_installment:
          type: number
          description: Número da parcela do recebível.
          example: 1
        payables_mdr:
          type: number
          description: Taxa de MDR do recebível.
          example: 2.5
        payables_rav:
          type: number
          description: Taxa de RAV do recebível.
          example: 0.5
        payables_gross_amount:
          type: number
          description: Valor bruto do recebível.
          example: 100
        payables_net_amount:
          type: number
          description: Valor líquido do recebível.
          example: 97
        payables_split_rule_id:
          type: object
          description: ID da regra de divisão do recebível.
          example: null
          nullable: true
        anticipated:
          type: string
          description: Indica se o recebível foi antecipado.
          example: 'false'
        payables_status:
          type: string
          description: Status do recebível.
          example: paid
        payment_date:
          type: string
          description: Data de pagamento.
          example: '2025-08-20T10:00:00Z'
          format: date-time
        original_payment_date:
          type: string
          description: Data de pagamento original.
          example: '2025-08-20T10:00:00Z'
          format: date-time
        payables_type:
          type: string
          description: Tipo do recebível.
          example: credit
        created_at:
          type: string
          description: Data de criação.
          example: '2025-07-21T10:00:00Z'
          format: date-time
        updated_at:
          type: string
          description: Data da última atualização.
          example: '2025-07-21T10:00:00Z'
          format: date-time
      required:
        - merchants_id
        - merchants_document_number
        - merchants_name
        - original_merchants_id
        - original_document_number
        - original_merchants_name
        - payables_id
        - transaction_id
        - authorization_code
        - authorization_currency_code
        - card_brand
        - payment_method
        - installments
        - transaction_nsu
        - transaction_tef_nsu
        - transaction_amount
        - original_transaction_amount
        - split_rules
        - transaction_splited
        - transaction_date
        - payables_installment
        - payables_mdr
        - payables_rav
        - payables_gross_amount
        - payables_net_amount
        - payables_split_rule_id
        - anticipated
        - payables_status
        - payment_date
        - original_payment_date
        - payables_type
        - created_at
        - updated_at
    DailyTotal:
      type: object
      properties:
        mdr:
          type: number
        tpv:
          type: number
        rav:
          type: number
        liquido:
          type: number
        data_recebimento:
          type: string
        pagamentos:
          type: array
          items:
            $ref: '#/components/schemas/PayableDto'
      required:
        - mdr
        - tpv
        - rav
        - liquido
        - data_recebimento
        - pagamentos
    EstabelecimentoRecebimentosDto:
      type: object
      properties:
        totais:
          $ref: '#/components/schemas/TotaisDto'
        recebimentos:
          type: array
          items:
            $ref: '#/components/schemas/DailyTotal'
      required:
        - totais
        - recebimentos