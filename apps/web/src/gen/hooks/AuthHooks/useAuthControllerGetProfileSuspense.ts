/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  AuthControllerGetProfileQueryResponse,
  AuthControllerGetProfile400,
  AuthControllerGetProfile401,
  AuthControllerGetProfile404,
  AuthControllerGetProfile500,
} from '../../types/AuthControllerGetProfile.ts'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '@kubb/plugin-client/clients/axios'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const authControllerGetProfileSuspenseQueryKey = () => [{ url: '/auth/perfil' }] as const

export type AuthControllerGetProfileSuspenseQueryKey = ReturnType<typeof authControllerGetProfileSuspenseQueryKey>

/**
 * {@link /auth/perfil}
 */
export async function authControllerGetProfileSuspense(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    AuthControllerGetProfileQueryResponse,
    ResponseErrorConfig<AuthControllerGetProfile400 | AuthControllerGetProfile401 | AuthControllerGetProfile404 | AuthControllerGetProfile500>,
    unknown
  >({ method: 'GET', url: `/auth/perfil`, baseURL: 'http://localhost:3000', ...requestConfig })
  return res
}

export function authControllerGetProfileSuspenseQueryOptions(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const queryKey = authControllerGetProfileSuspenseQueryKey()
  return queryOptions<
    ResponseConfig<AuthControllerGetProfileQueryResponse>,
    ResponseErrorConfig<AuthControllerGetProfile400 | AuthControllerGetProfile401 | AuthControllerGetProfile404 | AuthControllerGetProfile500>,
    ResponseConfig<AuthControllerGetProfileQueryResponse>,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return authControllerGetProfileSuspense(config)
    },
  })
}

/**
 * {@link /auth/perfil}
 */
export function useAuthControllerGetProfileSuspense<
  TData = ResponseConfig<AuthControllerGetProfileQueryResponse>,
  TQueryKey extends QueryKey = AuthControllerGetProfileSuspenseQueryKey,
>(
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        ResponseConfig<AuthControllerGetProfileQueryResponse>,
        ResponseErrorConfig<AuthControllerGetProfile400 | AuthControllerGetProfile401 | AuthControllerGetProfile404 | AuthControllerGetProfile500>,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? authControllerGetProfileSuspenseQueryKey()

  const query = useSuspenseQuery(
    {
      ...(authControllerGetProfileSuspenseQueryOptions(config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<
    TData,
    ResponseErrorConfig<AuthControllerGetProfile400 | AuthControllerGetProfile401 | AuthControllerGetProfile404 | AuthControllerGetProfile500>
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}