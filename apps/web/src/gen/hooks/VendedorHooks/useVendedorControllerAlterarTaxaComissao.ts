/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  VendedorControllerAlterarTaxaComissaoMutationRequest,
  VendedorControllerAlterarTaxaComissaoMutationResponse,
  VendedorControllerAlterarTaxaComissaoPathParams,
  VendedorControllerAlterarTaxaComissao400,
  VendedorControllerAlterarTaxaComissao401,
  VendedorControllerAlterarTaxaComissao404,
  VendedorControllerAlterarTaxaComissao500,
} from '../../types/VendedorControllerAlterarTaxaComissao.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const vendedorControllerAlterarTaxaComissaoMutationKey = () => [{ url: '/vendedores/{vendedor_id}/estabelecimentos/{estabelecimento_id}' }] as const

export type VendedorControllerAlterarTaxaComissaoMutationKey = ReturnType<typeof vendedorControllerAlterarTaxaComissaoMutationKey>

/**
 * @summary Alterar a taxa de comissão do estabelecimento
 * {@link /vendedores/:vendedor_id/estabelecimentos/:estabelecimento_id}
 */
export async function vendedorControllerAlterarTaxaComissao(
  vendedor_id: VendedorControllerAlterarTaxaComissaoPathParams['vendedor_id'],
  estabelecimento_id: VendedorControllerAlterarTaxaComissaoPathParams['estabelecimento_id'],
  data: VendedorControllerAlterarTaxaComissaoMutationRequest,
  config: Partial<RequestConfig<VendedorControllerAlterarTaxaComissaoMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    VendedorControllerAlterarTaxaComissaoMutationResponse,
    ResponseErrorConfig<
      | VendedorControllerAlterarTaxaComissao400
      | VendedorControllerAlterarTaxaComissao401
      | VendedorControllerAlterarTaxaComissao404
      | VendedorControllerAlterarTaxaComissao500
    >,
    VendedorControllerAlterarTaxaComissaoMutationRequest
  >({ method: 'PATCH', url: `/vendedores/${vendedor_id}/estabelecimentos/${estabelecimento_id}`, baseURL: 'http://localhost:3000', data, ...requestConfig })
  return res
}

/**
 * @summary Alterar a taxa de comissão do estabelecimento
 * {@link /vendedores/:vendedor_id/estabelecimentos/:estabelecimento_id}
 */
export function useVendedorControllerAlterarTaxaComissao<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<VendedorControllerAlterarTaxaComissaoMutationResponse>,
      ResponseErrorConfig<
        | VendedorControllerAlterarTaxaComissao400
        | VendedorControllerAlterarTaxaComissao401
        | VendedorControllerAlterarTaxaComissao404
        | VendedorControllerAlterarTaxaComissao500
      >,
      {
        vendedor_id: VendedorControllerAlterarTaxaComissaoPathParams['vendedor_id']
        estabelecimento_id: VendedorControllerAlterarTaxaComissaoPathParams['estabelecimento_id']
        data: VendedorControllerAlterarTaxaComissaoMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<VendedorControllerAlterarTaxaComissaoMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? vendedorControllerAlterarTaxaComissaoMutationKey()

  return useMutation<
    ResponseConfig<VendedorControllerAlterarTaxaComissaoMutationResponse>,
    ResponseErrorConfig<
      | VendedorControllerAlterarTaxaComissao400
      | VendedorControllerAlterarTaxaComissao401
      | VendedorControllerAlterarTaxaComissao404
      | VendedorControllerAlterarTaxaComissao500
    >,
    {
      vendedor_id: VendedorControllerAlterarTaxaComissaoPathParams['vendedor_id']
      estabelecimento_id: VendedorControllerAlterarTaxaComissaoPathParams['estabelecimento_id']
      data: VendedorControllerAlterarTaxaComissaoMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ vendedor_id, estabelecimento_id, data }) => {
        return vendedorControllerAlterarTaxaComissao(vendedor_id, estabelecimento_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}